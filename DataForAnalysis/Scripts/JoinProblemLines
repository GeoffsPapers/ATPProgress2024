#!/usr/bin/perl -w

#----JoinProblemLines TPTP-v6.2.0-Documents/SolutionsSummary > ! TPTP-v6.2.0-Documents/SolutionsSummary.csv
use strict "vars";

my $SystemsFileName = "AllSystemNames";

my $InputLine;
my $SystemName;
my $SystemResult;
my %SolversSolutions;
my $SystemsFileHandle;

open($SystemsFileHandle,"<$ARGV[0]") or die("ERROR: Cannot open $SystemsFileName\n");
while ($InputLine = <$SystemsFileHandle>) {
    chomp($InputLine);
    if ($InputLine =~ /.*---.*/) {
        ($SystemName,$SystemResult) = ($InputLine =~ /(.*---.*) ([0-9])/);
#DEBUG print("$SystemName,$SystemVersion,$SystemResult\n");
        $SolversSolutions{"$SystemName"} = "0";
    }
}
close($SystemsFileHandle);
#----Print header line
print("Problem,SZS,");
foreach $SystemName (sort {lc $a cmp lc $b} keys %SolversSolutions) {
    print("$SystemName,");
}
print("\n");

open($SystemsFileHandle,"<$ARGV[0]") or die("ERROR: Cannot open $SystemsFileName\n");
while ($InputLine = <$SystemsFileHandle>) {
    chomp($InputLine);
#----Blank line starts a new problem
    if ("$InputLine" ne "") {
#----If a system line, extract the parts and save
        if ($InputLine =~ /.*---.*/) {
            ($SystemName,$SystemResult) = ($InputLine =~ /(.*---.*) ([0-9])/);
#DEBUG print("$SystemName,$SystemVersion,$SystemResult\n");
            $SolversSolutions{"$SystemName"} = $SystemResult;
        } else {
#----Otherwise it's a problem name, put a comma after the name before the SZS
            $InputLine =~ s/ /,/;
            print("$InputLine,");
        }
    } else {
#----End of a problem block, print the systems' values
        foreach $SystemName (sort {lc $a cmp lc $b} keys %SolversSolutions) {
#DEBUG print("$SystemName===");
            print("$SolversSolutions{$SystemName},");
#----Reset for next problem
            $SolversSolutions{$SystemName} = "0";
        }
        print("\n");
    }
}
close($SystemsFileHandle);
